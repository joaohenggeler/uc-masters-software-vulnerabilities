#!/usr/bin/env python
import sys
import glob
import numpy as np
import pandas as pd

"""
	This script combines the files generated by the scripts "explore-cve-details-scraper.py" and "explore-mfsa-scraper.py" into a
	single CSV file. This allows you to check which CVEs from Mozilla's software exist in CVE Details, in MFSA, or in both.

	Requirements:

	pip install numpy
	pip install pandas
"""

cve_details_files = glob.glob(fr'cve-details-results-*.csv')
mfsa_files = glob.glob(fr'mfsa-results-*.csv')

if len(cve_details_files) != 1 or len(mfsa_files) != 1:
	print('The script will terminate since it expected exactly one CSV results file for CVE Details and MFSA.')
	sys.exit(1)

cve_details_filename = cve_details_files[0]
mfsa_filename = mfsa_files[0]

cve_details_results = pd.read_csv(cve_details_filename)
mfsa_results = pd.read_csv(mfsa_filename)

cve_details_results = cve_details_results.replace({np.nan: None})
mfsa_results = mfsa_results.replace({np.nan: None})

COMBINED_COLUMNS = ['CVE', 'Exists In CVE Details', 'Exists In MFSA', 'CVE Details URL', 'MFSA', 'MFSA URL', 'Bugzilla URL']
combined_results = pd.DataFrame(columns=COMBINED_COLUMNS)

print('Processing every CVE from CVE Details...')
for _, cve_details_row in cve_details_results.iterrows():

	# CVE Details = ['CVE', 'CVE Details URL', 'Bugzilla URL']
	# MFSA = ['CVE', 'MFSA', 'Exists In CVE Details', 'MFSA URL', 'CVE Details URL', 'Bugzilla URL']

	cve = cve_details_row['CVE']
	cve_details_url = cve_details_row['CVE Details URL']
	cve_details_bugzilla_url = cve_details_row['Bugzilla URL']
	
	is_cve = mfsa_results['CVE'] == cve
	mfsa_row = mfsa_results.loc[is_cve]

	mfsa_name = None
	mfsa_url = None
	mfsa_bugzilla_url = None

	if not mfsa_row.empty:
		mfsa_name = mfsa_row['MFSA'].values[0]
		mfsa_url = mfsa_row['MFSA URL'].values[0]
		mfsa_bugzilla_url = mfsa_row['Bugzilla URL'].values[0]

	bugzilla_url = mfsa_bugzilla_url or cve_details_bugzilla_url 

	exists_in_cve_details = 'Yes'
	exists_in_mfsa = 'Yes' if not mfsa_row.empty else 'No'

	combined_results = combined_results.append({'CVE': cve, 'Exists In CVE Details': exists_in_cve_details,
												'Exists In MFSA': exists_in_mfsa, 'CVE Details URL': cve_details_url,
												'MFSA': mfsa_name, 'MFSA URL': mfsa_url, 'Bugzilla URL': bugzilla_url},
												ignore_index=True)

print('Processing CVEs exclusively from MFSA...')
mfsa_not_in_cve_details = mfsa_results.loc[ mfsa_results['Exists In CVE Details'] == 'No' ].copy()
mfsa_not_in_cve_details.loc[:, 'Exists In MFSA'] = 'Yes'

combined_results = pd.concat([combined_results, mfsa_not_in_cve_details])

print('Creating the combined results CSV file...')
combined_results.to_csv('cve-details-and-mfsa-results.csv', index=False)

print()
print(f'Results intersection for {len(combined_results)} CVEs:')

is_cve_details = combined_results['Exists In CVE Details'] == 'Yes'
is_mfsa = combined_results['Exists In MFSA'] == 'Yes'

num_both = len(combined_results[is_cve_details & is_mfsa])
num_cve_details_only = len(combined_results[is_cve_details & ~is_mfsa])
num_mfsa_only = len(combined_results[~is_cve_details & is_mfsa])

print(f'- Both: {num_both}')
print(f'- CVE Details Only: {num_cve_details_only}')
print(f'- MFSA Only: {num_mfsa_only}')

print()
print('Finished running.')
