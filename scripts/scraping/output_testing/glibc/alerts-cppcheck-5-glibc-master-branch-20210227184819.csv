Vulnerable File,Vulnerable Lines,Git Commit Hash,Affected Functions,Affected Classes,File,Line,Column,Severity,Rule,CWE,Message
No,,4e8f95a0df7c2300b830ec12c0ae1e161bc8a8a3,,,locale/findlocale.c,279,34,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,,4e8f95a0df7c2300b830ec12c0ae1e161bc8a8a3,,,locale/findlocale.c,282,27,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,"[[19, 20], [59, 60], [68, 68], [76, 76], [80, 82], [84, 85], [88, 91], [93, 94], [100, 101]]",d183645616b0533b3acee28f1a95570bffbdf50f,,,locale/findlocale.c,231,34,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,"[[19, 20], [59, 60], [68, 68], [76, 76], [80, 82], [84, 85], [88, 91], [93, 94], [100, 101]]",d183645616b0533b3acee28f1a95570bffbdf50f,,,locale/findlocale.c,234,27,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,,11e3417af6e354f1942c68a271ae51e892b2814d,"[{""Name"": ""_nss_dns_getnetbyname_r(const char *, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [108, 150], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,129,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,,11e3417af6e354f1942c68a271ae51e892b2814d,"[{""Name"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,205,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,,11e3417af6e354f1942c68a271ae51e892b2814d,"[{""Name"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,154,35,warning,funcArgOrderDifferent,683,"Function '_nss_dns_getnetbyaddr_r' argument order different: declaration 'addr, type, net, buffer, buflen, errnop, herrnop' definition 'net, type, result, buffer, buflen, errnop, herrnop'"
Yes,"[[401, 402]]",ae61fc7b33d9d99d2763c16de8275227dc9748ba,"[{""Name"": ""_nss_dns_getnetbyname_r(const char *, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [108, 150], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,129,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,"[[401, 402]]",ae61fc7b33d9d99d2763c16de8275227dc9748ba,"[{""Name"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,205,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,"[[401, 402]]",ae61fc7b33d9d99d2763c16de8275227dc9748ba,"[{""Name"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,154,35,warning,funcArgOrderDifferent,683,"Function '_nss_dns_getnetbyaddr_r' argument order different: declaration 'addr, type, net, buffer, buflen, errnop, herrnop' definition 'net, type, result, buffer, buflen, errnop, herrnop'"
No,,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[{""Name"": ""_nss_dns_gethostbyname4_r(const char *, struct gaih_addrtuple **, char *, size_t, int *, int *, int *)"", ""Lines"": [280, 361], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-host.c,295,19,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[{""Name"": ""_nss_dns_gethostbyname4_r(const char *, struct gaih_addrtuple **, char *, size_t, int *, int *, int *)"", ""Lines"": [280, 361], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-host.c,307,53,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[{""Name"": ""gaih_getanswer_slice(const int *, int, const char *, struct gaih_addrtuple ***, char **, size_t *, int *, int *, int *, int *)"", ""Lines"": [979, 1222], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-host.c,1169,8,warning,nullPointerRedundantCheck,476,Either the condition '*pat==NULL' is redundant or there is possible null pointer dereference: *pat.
No,,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[{""Name"": ""gaih_getanswer_slice(const int *, int, const char *, struct gaih_addrtuple ***, char **, size_t *, int *, int *, int *, int *)"", ""Lines"": [979, 1222], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-host.c,1170,8,warning,nullPointerRedundantCheck,476,Either the condition '*pat==NULL' is redundant or there is possible null pointer dereference: *pat.
No,,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[{""Name"": ""__libc_res_nquery(int, const char *, int, int, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [113, 310], ""Vulnerable"": ""No""}]",,resolv/res_query.c,131,16,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[{""Name"": ""send_vc(int, const int *, int, const int *, int, int **, int *, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [723, 976], ""Vulnerable"": ""No""}]",,resolv/res_send.c,870,21,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[{""Name"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1084, 1523], ""Vulnerable"": ""No""}]",,resolv/res_send.c,1340,30,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[{""Name"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1084, 1523], ""Vulnerable"": ""No""}]",,resolv/res_send.c,1343,47,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,,,resolv/res_send.c,1535,3,warning,invalidPrintfArgType_uint,686,%u in format string (no. 3) requires 'unsigned int' but the argument type is 'signed int'.
Yes,"[[1034, 1034], [1211, 1211], [1224, 1225], [1229, 1230], [1244, 1245], [1246, 1247]]",2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[{""Name"": ""_nss_dns_gethostbyname4_r(const char *, struct gaih_addrtuple **, char *, size_t, int *, int *, int *)"", ""Lines"": [280, 361], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-host.c,295,19,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,"[[1034, 1034], [1211, 1211], [1224, 1225], [1229, 1230], [1244, 1245], [1246, 1247]]",2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[{""Name"": ""_nss_dns_gethostbyname4_r(const char *, struct gaih_addrtuple **, char *, size_t, int *, int *, int *)"", ""Lines"": [280, 361], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-host.c,307,53,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,"[[1034, 1034], [1211, 1211], [1224, 1225], [1229, 1230], [1244, 1245], [1246, 1247]]",2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[{""Name"": ""gaih_getanswer_slice(const int *, int, const char *, struct gaih_addrtuple ***, char **, size_t *, int *, int *, int *, int *)"", ""Lines"": [979, 1212], ""Vulnerable"": ""Yes""}]",,resolv/nss_dns/dns-host.c,1166,8,warning,nullPointerRedundantCheck,476,Either the condition '*pat==NULL' is redundant or there is possible null pointer dereference: *pat.
Yes,"[[1034, 1034], [1211, 1211], [1224, 1225], [1229, 1230], [1244, 1245], [1246, 1247]]",2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[{""Name"": ""gaih_getanswer_slice(const int *, int, const char *, struct gaih_addrtuple ***, char **, size_t *, int *, int *, int *, int *)"", ""Lines"": [979, 1212], ""Vulnerable"": ""Yes""}]",,resolv/nss_dns/dns-host.c,1167,8,warning,nullPointerRedundantCheck,476,Either the condition '*pat==NULL' is redundant or there is possible null pointer dereference: *pat.
Yes,"[[398, 399], [449, 450], [523, 524]]",2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[{""Name"": ""__libc_res_nquery(int, const char *, int, int, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [113, 310], ""Vulnerable"": ""No""}]",,resolv/res_query.c,131,16,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,"[[357, 358], [632, 633], [642, 646], [733, 734], [769, 770], [775, 799], [807, 810], [821, 822], [950, 951], [960, 961], [993, 994], [1156, 1157], [1162, 1183], [1190, 1192], [1193, 1194], [1197, 1198], [1200, 1201], [1205, 1206]]",2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,,,resolv/res_send.c,1401,3,warning,invalidPrintfArgType_uint,686,%u in format string (no. 3) requires 'unsigned int' but the argument type is 'signed int'.
No,,b66d837bb5398795c6b0f651bd5a5d66091d8577,"[{""Name"": ""send_vc(int, const int *, int, const int *, int, int **, int *, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [735, 988], ""Vulnerable"": ""No""}]",,resolv/res_send.c,882,21,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,,b66d837bb5398795c6b0f651bd5a5d66091d8577,"[{""Name"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1096, 1540], ""Vulnerable"": ""No""}]",,resolv/res_send.c,1354,30,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,,b66d837bb5398795c6b0f651bd5a5d66091d8577,"[{""Name"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1096, 1540], ""Vulnerable"": ""No""}]",,resolv/res_send.c,1357,47,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,,b66d837bb5398795c6b0f651bd5a5d66091d8577,,,resolv/res_send.c,1552,3,warning,invalidPrintfArgType_uint,686,%u in format string (no. 3) requires 'unsigned int' but the argument type is 'signed int'.
Yes,"[[651, 652], [1117, 1117], [1130, 1131], [1139, 1141], [1188, 1188], [1256, 1256], [1274, 1274], [1352, 1352], [1363, 1363], [1412, 1412], [1464, 1464], [1467, 1467], [1488, 1489], [1504, 1504], [1510, 1513], [1515, 1518]]",f327f5b47be57bc05a4077344b381016c1bb2c11,"[{""Name"": ""send_vc(int, const int *, int, const int *, int, int **, int *, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [723, 976], ""Vulnerable"": ""No""}]",,resolv/res_send.c,870,21,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
Yes,"[[651, 652], [1117, 1117], [1130, 1131], [1139, 1141], [1188, 1188], [1256, 1256], [1274, 1274], [1352, 1352], [1363, 1363], [1412, 1412], [1464, 1464], [1467, 1467], [1488, 1489], [1504, 1504], [1510, 1513], [1515, 1518]]",f327f5b47be57bc05a4077344b381016c1bb2c11,"[{""Name"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1084, 1523], ""Vulnerable"": ""Yes""}]",,resolv/res_send.c,1340,30,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
Yes,"[[651, 652], [1117, 1117], [1130, 1131], [1139, 1141], [1188, 1188], [1256, 1256], [1274, 1274], [1352, 1352], [1363, 1363], [1412, 1412], [1464, 1464], [1467, 1467], [1488, 1489], [1504, 1504], [1510, 1513], [1515, 1518]]",f327f5b47be57bc05a4077344b381016c1bb2c11,"[{""Name"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1084, 1523], ""Vulnerable"": ""Yes""}]",,resolv/res_send.c,1343,47,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
Yes,"[[651, 652], [1117, 1117], [1130, 1131], [1139, 1141], [1188, 1188], [1256, 1256], [1274, 1274], [1352, 1352], [1363, 1363], [1412, 1412], [1464, 1464], [1467, 1467], [1488, 1489], [1504, 1504], [1510, 1513], [1515, 1518]]",f327f5b47be57bc05a4077344b381016c1bb2c11,,,resolv/res_send.c,1535,3,warning,invalidPrintfArgType_uint,686,%u in format string (no. 3) requires 'unsigned int' but the argument type is 'signed int'.
No,,317b199b4aff8cfa27f2302ab404d2bb5032b9a4,"[{""Name"": ""_nss_dns_getnetbyname_r(const char *, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [108, 147], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,126,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,,317b199b4aff8cfa27f2302ab404d2bb5032b9a4,"[{""Name"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [150, 234], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,202,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,,317b199b4aff8cfa27f2302ab404d2bb5032b9a4,"[{""Name"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [150, 234], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,151,35,warning,funcArgOrderDifferent,683,"Function '_nss_dns_getnetbyaddr_r' argument order different: declaration 'addr, type, net, buffer, buflen, errnop, herrnop' definition 'net, type, result, buffer, buflen, errnop, herrnop'"
Yes,"[[121, 121], [127, 128], [131, 131]]",a6033052d08027f745867e5e346852da1959226c,"[{""Name"": ""_nss_dns_getnetbyname_r(const char *, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [108, 150], ""Vulnerable"": ""Yes""}]",,resolv/nss_dns/dns-network.c,129,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,"[[121, 121], [127, 128], [131, 131]]",a6033052d08027f745867e5e346852da1959226c,"[{""Name"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,205,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,"[[121, 121], [127, 128], [131, 131]]",a6033052d08027f745867e5e346852da1959226c,"[{""Name"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,resolv/nss_dns/dns-network.c,154,35,warning,funcArgOrderDifferent,683,"Function '_nss_dns_getnetbyaddr_r' argument order different: declaration 'addr, type, net, buffer, buflen, errnop, herrnop' definition 'net, type, result, buffer, buflen, errnop, herrnop'"
