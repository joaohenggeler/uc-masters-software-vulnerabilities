Vulnerable Commit,Commit Hash,Changed Lines,Affected Functions,Affected Classes,Vulnerable File,File,Line,Column,Severity,Rule,CWE,Message
Yes,d183645616b0533b3acee28f1a95570bffbdf50f,"[[19, 19], [59, 59], [68, 68], [76, 76], [80, 82], [84, 85], [88, 91], [93, 94], [100, 100]]",,,Yes,locale/findlocale.c,231,34,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,d183645616b0533b3acee28f1a95570bffbdf50f,"[[19, 19], [59, 59], [68, 68], [76, 76], [80, 82], [84, 85], [88, 91], [93, 94], [100, 100]]",,,Yes,locale/findlocale.c,234,27,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,4e8f95a0df7c2300b830ec12c0ae1e161bc8a8a3,"[[20, 20], [61, 99], [108, 108], [116, 116], [120, 122], [124, 127], [130, 132], [134, 135], [142, 148]]",,,No,locale/findlocale.c,279,34,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,4e8f95a0df7c2300b830ec12c0ae1e161bc8a8a3,"[[20, 20], [61, 99], [108, 108], [116, 116], [120, 122], [124, 127], [130, 132], [134, 135], [142, 148]]",,,No,locale/findlocale.c,282,27,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,ae61fc7b33d9d99d2763c16de8275227dc9748ba,"[[401, 402]]","[{""Name"": ""_nss_dns_getnetbyname_r"", ""Signature"": ""_nss_dns_getnetbyname_r(const char *, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [108, 150], ""Vulnerable"": ""No""}]",,Yes,resolv/nss_dns/dns-network.c,129,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,ae61fc7b33d9d99d2763c16de8275227dc9748ba,"[[401, 402]]","[{""Name"": ""_nss_dns_getnetbyaddr_r"", ""Signature"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,Yes,resolv/nss_dns/dns-network.c,205,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,ae61fc7b33d9d99d2763c16de8275227dc9748ba,"[[401, 402]]","[{""Name"": ""_nss_dns_getnetbyaddr_r"", ""Signature"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,Yes,resolv/nss_dns/dns-network.c,154,35,warning,funcArgOrderDifferent,683,"Function '_nss_dns_getnetbyaddr_r' argument order different: declaration 'addr, type, net, buffer, buflen, errnop, herrnop' definition 'net, type, result, buffer, buflen, errnop, herrnop'"
No,11e3417af6e354f1942c68a271ae51e892b2814d,"[[401, 402]]","[{""Name"": ""_nss_dns_getnetbyname_r"", ""Signature"": ""_nss_dns_getnetbyname_r(const char *, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [108, 150], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-network.c,129,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,11e3417af6e354f1942c68a271ae51e892b2814d,"[[401, 402]]","[{""Name"": ""_nss_dns_getnetbyaddr_r"", ""Signature"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-network.c,205,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,11e3417af6e354f1942c68a271ae51e892b2814d,"[[401, 402]]","[{""Name"": ""_nss_dns_getnetbyaddr_r"", ""Signature"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-network.c,154,35,warning,funcArgOrderDifferent,683,"Function '_nss_dns_getnetbyaddr_r' argument order different: declaration 'addr, type, net, buffer, buflen, errnop, herrnop' definition 'net, type, result, buffer, buflen, errnop, herrnop'"
Yes,2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[[1034, 1034], [1211, 1211], [1224, 1224], [1229, 1229], [1244, 1244], [1246, 1246]]","[{""Name"": ""_nss_dns_gethostbyname4_r"", ""Signature"": ""_nss_dns_gethostbyname4_r(const char *, struct gaih_addrtuple **, char *, size_t, int *, int *, int *)"", ""Lines"": [280, 361], ""Vulnerable"": ""No""}]",,Yes,resolv/nss_dns/dns-host.c,295,19,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[[1034, 1034], [1211, 1211], [1224, 1224], [1229, 1229], [1244, 1244], [1246, 1246]]","[{""Name"": ""_nss_dns_gethostbyname4_r"", ""Signature"": ""_nss_dns_gethostbyname4_r(const char *, struct gaih_addrtuple **, char *, size_t, int *, int *, int *)"", ""Lines"": [280, 361], ""Vulnerable"": ""No""}]",,Yes,resolv/nss_dns/dns-host.c,307,53,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[[1034, 1034], [1211, 1211], [1224, 1224], [1229, 1229], [1244, 1244], [1246, 1246]]","[{""Name"": ""gaih_getanswer_slice"", ""Signature"": ""gaih_getanswer_slice(const int *, int, const char *, struct gaih_addrtuple ***, char **, size_t *, int *, int *, int *, int *)"", ""Lines"": [979, 1212], ""Vulnerable"": ""Yes""}]",,Yes,resolv/nss_dns/dns-host.c,1166,8,warning,nullPointerRedundantCheck,476,Either the condition '*pat==NULL' is redundant or there is possible null pointer dereference: *pat.
Yes,2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[[1034, 1034], [1211, 1211], [1224, 1224], [1229, 1229], [1244, 1244], [1246, 1246]]","[{""Name"": ""gaih_getanswer_slice"", ""Signature"": ""gaih_getanswer_slice(const int *, int, const char *, struct gaih_addrtuple ***, char **, size_t *, int *, int *, int *, int *)"", ""Lines"": [979, 1212], ""Vulnerable"": ""Yes""}]",,Yes,resolv/nss_dns/dns-host.c,1167,8,warning,nullPointerRedundantCheck,476,Either the condition '*pat==NULL' is redundant or there is possible null pointer dereference: *pat.
Yes,2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[[398, 398], [449, 449], [523, 523]]","[{""Name"": ""__libc_res_nquery"", ""Signature"": ""__libc_res_nquery(int, const char *, int, int, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [113, 310], ""Vulnerable"": ""No""}]",,Yes,resolv/res_query.c,131,16,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,2c8f75f79bd6f3f4b3400a9f1a01a75e3086006b,"[[357, 357], [632, 632], [642, 646], [733, 733], [769, 769], [775, 799], [807, 810], [821, 821], [950, 950], [960, 961], [993, 993], [1156, 1156], [1162, 1183], [1190, 1192], [1193, 1193], [1197, 1197], [1200, 1201], [1205, 1205]]",,,Yes,resolv/res_send.c,1401,3,warning,invalidPrintfArgType_uint,686,%u in format string (no. 3) requires 'unsigned int' but the argument type is 'signed int'.
No,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[[1034, 1037], [1214, 1221], [1235, 1323], [1329, 1329], [1345, 1345], [1348, 1353]]","[{""Name"": ""_nss_dns_gethostbyname4_r"", ""Signature"": ""_nss_dns_gethostbyname4_r(const char *, struct gaih_addrtuple **, char *, size_t, int *, int *, int *)"", ""Lines"": [280, 361], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-host.c,295,19,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[[1034, 1037], [1214, 1221], [1235, 1323], [1329, 1329], [1345, 1345], [1348, 1353]]","[{""Name"": ""_nss_dns_gethostbyname4_r"", ""Signature"": ""_nss_dns_gethostbyname4_r(const char *, struct gaih_addrtuple **, char *, size_t, int *, int *, int *)"", ""Lines"": [280, 361], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-host.c,307,53,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[[1034, 1037], [1214, 1221], [1235, 1323], [1329, 1329], [1345, 1345], [1348, 1353]]","[{""Name"": ""gaih_getanswer_slice"", ""Signature"": ""gaih_getanswer_slice(const int *, int, const char *, struct gaih_addrtuple ***, char **, size_t *, int *, int *, int *, int *)"", ""Lines"": [979, 1222], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-host.c,1169,8,warning,nullPointerRedundantCheck,476,Either the condition '*pat==NULL' is redundant or there is possible null pointer dereference: *pat.
No,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[[1034, 1037], [1214, 1221], [1235, 1323], [1329, 1329], [1345, 1345], [1348, 1353]]","[{""Name"": ""gaih_getanswer_slice"", ""Signature"": ""gaih_getanswer_slice(const int *, int, const char *, struct gaih_addrtuple ***, char **, size_t *, int *, int *, int *, int *)"", ""Lines"": [979, 1222], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-host.c,1170,8,warning,nullPointerRedundantCheck,476,Either the condition '*pat==NULL' is redundant or there is possible null pointer dereference: *pat.
No,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[[399, 399], [451, 451], [526, 526]]","[{""Name"": ""__libc_res_nquery"", ""Signature"": ""__libc_res_nquery(int, const char *, int, int, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [113, 310], ""Vulnerable"": ""No""}]",,No,resolv/res_query.c,131,16,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[[1, 17], [375, 376], [652, 722], [732, 732], [820, 821], [858, 860], [865, 865], [873, 880], [892, 894], [1024, 1083], [1092, 1092], [1125, 1126], [1290, 1292], [1297, 1297], [1304, 1307], [1309, 1309], [1314, 1315], [1318, 1319], [1324, 1339]]","[{""Name"": ""send_vc"", ""Signature"": ""send_vc(int, const int *, int, const int *, int, int **, int *, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [723, 976], ""Vulnerable"": ""No""}]",,No,resolv/res_send.c,870,21,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[[1, 17], [375, 376], [652, 722], [732, 732], [820, 821], [858, 860], [865, 865], [873, 880], [892, 894], [1024, 1083], [1092, 1092], [1125, 1126], [1290, 1292], [1297, 1297], [1304, 1307], [1309, 1309], [1314, 1315], [1318, 1319], [1324, 1339]]","[{""Name"": ""send_dg"", ""Signature"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1084, 1523], ""Vulnerable"": ""No""}]",,No,resolv/res_send.c,1340,30,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[[1, 17], [375, 376], [652, 722], [732, 732], [820, 821], [858, 860], [865, 865], [873, 880], [892, 894], [1024, 1083], [1092, 1092], [1125, 1126], [1290, 1292], [1297, 1297], [1304, 1307], [1309, 1309], [1314, 1315], [1318, 1319], [1324, 1339]]","[{""Name"": ""send_dg"", ""Signature"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1084, 1523], ""Vulnerable"": ""No""}]",,No,resolv/res_send.c,1343,47,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,e9db92d3acfe1822d56d11abcea5bfc4c41cf6ca,"[[1, 17], [375, 376], [652, 722], [732, 732], [820, 821], [858, 860], [865, 865], [873, 880], [892, 894], [1024, 1083], [1092, 1092], [1125, 1126], [1290, 1292], [1297, 1297], [1304, 1307], [1309, 1309], [1314, 1315], [1318, 1319], [1324, 1339]]",,,No,resolv/res_send.c,1535,3,warning,invalidPrintfArgType_uint,686,%u in format string (no. 3) requires 'unsigned int' but the argument type is 'signed int'.
Yes,f327f5b47be57bc05a4077344b381016c1bb2c11,"[[651, 651], [1117, 1117], [1130, 1131], [1139, 1141], [1188, 1188], [1256, 1256], [1274, 1274], [1352, 1352], [1363, 1363], [1412, 1412], [1464, 1464], [1467, 1467], [1488, 1488], [1504, 1504], [1510, 1513], [1515, 1518]]","[{""Name"": ""send_vc"", ""Signature"": ""send_vc(int, const int *, int, const int *, int, int **, int *, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [723, 976], ""Vulnerable"": ""No""}]",,Yes,resolv/res_send.c,870,21,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
Yes,f327f5b47be57bc05a4077344b381016c1bb2c11,"[[651, 651], [1117, 1117], [1130, 1131], [1139, 1141], [1188, 1188], [1256, 1256], [1274, 1274], [1352, 1352], [1363, 1363], [1412, 1412], [1464, 1464], [1467, 1467], [1488, 1488], [1504, 1504], [1510, 1513], [1515, 1518]]","[{""Name"": ""send_dg"", ""Signature"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1084, 1523], ""Vulnerable"": ""Yes""}]",,Yes,resolv/res_send.c,1340,30,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
Yes,f327f5b47be57bc05a4077344b381016c1bb2c11,"[[651, 651], [1117, 1117], [1130, 1131], [1139, 1141], [1188, 1188], [1256, 1256], [1274, 1274], [1352, 1352], [1363, 1363], [1412, 1412], [1464, 1464], [1467, 1467], [1488, 1488], [1504, 1504], [1510, 1513], [1515, 1518]]","[{""Name"": ""send_dg"", ""Signature"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1084, 1523], ""Vulnerable"": ""Yes""}]",,Yes,resolv/res_send.c,1343,47,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
Yes,f327f5b47be57bc05a4077344b381016c1bb2c11,"[[651, 651], [1117, 1117], [1130, 1131], [1139, 1141], [1188, 1188], [1256, 1256], [1274, 1274], [1352, 1352], [1363, 1363], [1412, 1412], [1464, 1464], [1467, 1467], [1488, 1488], [1504, 1504], [1510, 1513], [1515, 1518]]",,,Yes,resolv/res_send.c,1535,3,warning,invalidPrintfArgType_uint,686,%u in format string (no. 3) requires 'unsigned int' but the argument type is 'signed int'.
No,b66d837bb5398795c6b0f651bd5a5d66091d8577,"[[652, 663], [1129, 1133], [1145, 1145], [1153, 1153], [1200, 1202], [1270, 1270], [1288, 1288], [1366, 1366], [1377, 1377], [1426, 1426], [1477, 1477], [1480, 1481], [1503, 1504], [1520, 1524], [1530, 1531], [1533, 1535]]","[{""Name"": ""send_vc"", ""Signature"": ""send_vc(int, const int *, int, const int *, int, int **, int *, int *, int, int **, int **, int *, int *, int *)"", ""Lines"": [735, 988], ""Vulnerable"": ""No""}]",,No,resolv/res_send.c,882,21,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,b66d837bb5398795c6b0f651bd5a5d66091d8577,"[[652, 663], [1129, 1133], [1145, 1145], [1153, 1153], [1200, 1202], [1270, 1270], [1288, 1288], [1366, 1366], [1377, 1377], [1426, 1426], [1477, 1477], [1480, 1481], [1503, 1504], [1520, 1524], [1530, 1531], [1533, 1535]]","[{""Name"": ""send_dg"", ""Signature"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1096, 1540], ""Vulnerable"": ""No""}]",,No,resolv/res_send.c,1354,30,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,b66d837bb5398795c6b0f651bd5a5d66091d8577,"[[652, 663], [1129, 1133], [1145, 1145], [1153, 1153], [1200, 1202], [1270, 1270], [1288, 1288], [1366, 1366], [1377, 1377], [1426, 1426], [1477, 1477], [1480, 1481], [1503, 1504], [1520, 1524], [1530, 1531], [1533, 1535]]","[{""Name"": ""send_dg"", ""Signature"": ""send_dg(int, const int *, int, const int *, int, int **, int *, int *, int, int *, int *, int **, int **, int *, int *, int *)"", ""Lines"": [1096, 1540], ""Vulnerable"": ""No""}]",,No,resolv/res_send.c,1357,47,warning,nullPointerRedundantCheck,476,Either the condition 'thisansp!=NULL' is redundant or there is possible null pointer dereference: thisansp.
No,b66d837bb5398795c6b0f651bd5a5d66091d8577,"[[652, 663], [1129, 1133], [1145, 1145], [1153, 1153], [1200, 1202], [1270, 1270], [1288, 1288], [1366, 1366], [1377, 1377], [1426, 1426], [1477, 1477], [1480, 1481], [1503, 1504], [1520, 1524], [1530, 1531], [1533, 1535]]",,,No,resolv/res_send.c,1552,3,warning,invalidPrintfArgType_uint,686,%u in format string (no. 3) requires 'unsigned int' but the argument type is 'signed int'.
Yes,a6033052d08027f745867e5e346852da1959226c,"[[121, 121], [127, 128], [131, 131]]","[{""Name"": ""_nss_dns_getnetbyname_r"", ""Signature"": ""_nss_dns_getnetbyname_r(const char *, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [108, 150], ""Vulnerable"": ""Yes""}]",,Yes,resolv/nss_dns/dns-network.c,129,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,a6033052d08027f745867e5e346852da1959226c,"[[121, 121], [127, 128], [131, 131]]","[{""Name"": ""_nss_dns_getnetbyaddr_r"", ""Signature"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,Yes,resolv/nss_dns/dns-network.c,205,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
Yes,a6033052d08027f745867e5e346852da1959226c,"[[121, 121], [127, 128], [131, 131]]","[{""Name"": ""_nss_dns_getnetbyaddr_r"", ""Signature"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [153, 237], ""Vulnerable"": ""No""}]",,Yes,resolv/nss_dns/dns-network.c,154,35,warning,funcArgOrderDifferent,683,"Function '_nss_dns_getnetbyaddr_r' argument order different: declaration 'addr, type, net, buffer, buflen, errnop, herrnop' definition 'net, type, result, buffer, buflen, errnop, herrnop'"
No,317b199b4aff8cfa27f2302ab404d2bb5032b9a4,"[[120, 120], [125, 125], [128, 128]]","[{""Name"": ""_nss_dns_getnetbyname_r"", ""Signature"": ""_nss_dns_getnetbyname_r(const char *, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [108, 147], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-network.c,126,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,317b199b4aff8cfa27f2302ab404d2bb5032b9a4,"[[120, 120], [125, 125], [128, 128]]","[{""Name"": ""_nss_dns_getnetbyaddr_r"", ""Signature"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [150, 234], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-network.c,202,51,warning,allocaCalled,,Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead.
No,317b199b4aff8cfa27f2302ab404d2bb5032b9a4,"[[120, 120], [125, 125], [128, 128]]","[{""Name"": ""_nss_dns_getnetbyaddr_r"", ""Signature"": ""_nss_dns_getnetbyaddr_r(int, int, struct netent *, char *, size_t, int *, int *)"", ""Lines"": [150, 234], ""Vulnerable"": ""No""}]",,No,resolv/nss_dns/dns-network.c,151,35,warning,funcArgOrderDifferent,683,"Function '_nss_dns_getnetbyaddr_r' argument order different: declaration 'addr, type, net, buffer, buflen, errnop, herrnop' definition 'net, type, result, buffer, buflen, errnop, herrnop'"
