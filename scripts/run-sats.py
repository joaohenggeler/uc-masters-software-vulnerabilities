#!/usr/bin/env python
import sys
import subprocess
import bs4

"""
	This script currently explores the various types of data that are generated by static analysis tools (SATs).
	The goal is to eventually add some of this information to the software vulnerability database.

	Tools used:
	- Cppcheck: http://cppcheck.sourceforge.net/
	- Flawfinder: https://dwheeler.com/flawfinder/

	Requirements:

	pip install beautifulsoup4
	pip install lxml
"""

script_name = sys.argv[0]
num_args = len(sys.argv) - 1

if num_args != 1:
	print(f'Wrong number of arguments. Usage: {script_name} <Path To C/C++ Source Files>')
	sys.exit(1)

source_path = sys.argv[1]

# --------------------------------------------------
# Cppcheck
# --------------------------------------------------

CPPCHECK_COMMAND = '"C:\\Program Files\\Cppcheck\\cppcheck.exe" --xml'

command = f'{CPPCHECK_COMMAND} "{source_path}"'
print(f'Running Cppcheck using the command: {command}')
xml_result = subprocess.run(command, stdout=subprocess.DEVNULL, stderr=subprocess.PIPE).stderr

soup = bs4.BeautifulSoup(xml_result, 'lxml')
error_list = soup.find_all('error')
print(f'Found {len(error_list)} errors.')

for i, error in enumerate(error_list):

	id = error.get('id')
	severity = error.get('severity')
	short_message = error.get('msg')
	long_message = error.get('verbose')
	is_message_inconclusive = error.get('inconclusive')
	cwe = error.get('cwe')

	location = error.find('location')
	if location is not None:
		filename = location.get('file')
		source_filename = location.get('file0')
		line = location.get('line')
		location_info = location.get('info')

	print(f'\t#{i}:ID "{id}", Severity "{severity}", Is Message Inconclusive "{is_message_inconclusive}", CWE "{cwe}", Filename "{filename}", Line "{line}", Location Info "{location_info}"')

	"""
	Information:
	- Type of error (ID).
	- Severity (error, warning, style, performance, portability, information).
	- Error message ('msg' and 'verbose'), and if it's inconclusive.
	- CWE (if it's known).
	- Source filename ('file' and 'file0') where the error was detected.
	- Line number where the error was detected.
	"""

# --------------------------------------------------
# @TODO: Flawfinder
# --------------------------------------------------

"""
Information in the sample outputs on the Flawfinder website:
- Type of error (category).
- Severity level (0-5, no risk to maximum risk).
- Warning, suggestion, and note messages.
- CWEs (can be multiple or specify parent relationship with another CWE).
- Source filename where the error was detected.
- Column and line numbers where the error was detected.
- Name of the triggering rule (functions that are common causes of security flaws).
- Line (context) where the error was detected.
- SHA-256 hash (fingerprint) of this context line (without leading or trailing whitespace).
"""
